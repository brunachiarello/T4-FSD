 Address    Code        Basic                     Source

0x00400000  0x3c011001  lui $1,0x00001001     4    main:	la	$t0, n
0x00400004  0x34280000  ori $8,$1,0x00000000       
0x00400008  0x8d080000  lw $8,0x00000000($8)  5    	lw	$t0, 0($t0)		#t0: n	
0x0040000c  0x3c011001  lui $1,0x00001001     7    	la	$t1, a			# a para o registrador t1
0x00400010  0x34290004  ori $9,$1,0x00000004       
0x00400014  0x3c011001  lui $1,0x00001001     8    	la	$t2, b			# b para o registrador t2
0x00400018  0x342a0024  ori $10,$1,0x00000024      
0x0040001c  0x3c011001  lui $1,0x00001001     9    	la	$t3, c			# c para o registrador t3
0x00400020  0x342b0044  ori $11,$1,0x00000044      
0x00400024  0x3c011001  lui $1,0x00001001     10   	la	$t4, d			# d para o registrador t4
0x00400028  0x342c0064  ori $12,$1,0x00000064      
0x0040002c  0x01ad6826  xor $13,$13,$13       12   	xor	$t5, $t5, $t5		# zera i
0x00400030  0x11a8000c  beq $13,$8,0x0000000c 16   	beq	$t5, $t0, inicializa_max		# verifica se t5 e t0 s�o iguais
0x00400034  0x8d2e0000  lw $14,0x00000000($9) 17       	lw	$t6, 0($t1)		# Carrega a[i]
0x00400038  0x8d4f0000  lw $15,0x00000000($10)18       	lw	$t7, 0($t2)   		# Carrega b[i]
0x0040003c  0x01cfc020  add $24,$14,$15       20       	add	$t8, $t6, $t7 		# c[i] = a[i] + b[i]
0x00400040  0x01cfc822  sub $25,$14,$15       21       	sub	$t9, $t6, $t7 		# d[i] = a[i] - b[i]
0x00400044  0xad780000  sw $24,0x00000000($11)23       	sw 	$t8, 0($t3)   		# Armazena c[i]
0x00400048  0xad990000  sw $25,0x00000000($12)24       	sw	$t9, 0($t4)   		# Armazena d[i]
0x0040004c  0x21ad0001  addi $13,$13,0x000000026       	addi	$t5, $t5, 1  		# Incrementa i
0x00400050  0x21290004  addi $9,$9,0x00000004 27       	addi	$t1, $t1, 4  		# Avan�a para o proximo elemento de a
0x00400054  0x214a0004  addi $10,$10,0x000000028       	addi	$t2, $t2, 4  		# Avan�a para o proximo elemento de b
0x00400058  0x216b0004  addi $11,$11,0x000000029       	addi	$t3, $t3, 4  		# Avan�a para o proximo elemento de c
0x0040005c  0x218c0004  addi $12,$12,0x000000030       	addi	$t4, $t4, 4  		# Avan�a para o proximo elemento de d
0x00400060  0x0810000c  j 0x00400030          31       	j	inicializa_vetores_loop   	
0x00400064  0x01ad6826  xor $13,$13,$13       35   	xor	$t5, $t5, $t5		# zera i
0x00400068  0x3c011001  lui $1,0x00001001     36   	la	$t1, c			# c para o registrador t1
0x0040006c  0x34290044  ori $9,$1,0x00000044       
0x00400070  0x3c011001  lui $1,0x00001001     37   	la	$t2, d			# d para o registrador t2
0x00400074  0x342a0064  ori $10,$1,0x00000064      
0x00400078  0x8d2b0000  lw $11,0x00000000($9) 38   	lw 	$t3, 0($t1)		# inicializa max value	com c[i]	
0x0040007c  0x11a8000e  beq $13,$8,0x0000000e 41   	beq	$t5, $t0, inicializa_soma		# verifica se t5 e t0 s�o iguais
0x00400080  0x8d2e0000  lw $14,0x00000000($9) 42       	lw 	$t6, 0($t1)   		# Carrega c[i]
0x00400084  0x8d4f0000  lw $15,0x00000000($10)43       	lw 	$t7, 0($t2)   		# Carrega d[i]
0x00400088  0x016e082a  slt $1,$11,$14        44       	bgt	$t6, $t3, c_maior	# verifica se c[i] � maior que max
0x0040008c  0x14200006  bne $1,$0,0x00000006       
0x00400090  0x016f082a  slt $1,$11,$15        47       	bgt	$t7, $t3, d_maior	#verifica se d[i] � maior que max
0x00400094  0x14200006  bne $1,$0,0x00000006       
0x00400098  0x21ad0001  addi $13,$13,0x000000050       	addi	$t5, $t5, 1  		# Incrementa i
0x0040009c  0x21290004  addi $9,$9,0x00000004 51       	addi	$t1, $t1, 4  		# Avan�a para o pr�ximo elemento de c
0x004000a0  0x214a0004  addi $10,$10,0x000000052       	addi	$t2, $t2, 4  		# Avan�a para o pr�ximo elemento de d
0x004000a4  0x0810001f  j 0x0040007c          53       	j max_value_loop		
0x004000a8  0x01c05820  add $11,$14,$0        56    	add	$t3, $t6, $0		# max value recebe c[i]
0x004000ac  0x08100024  j 0x00400090          57    	j	verify_d
0x004000b0  0x01e05820  add $11,$15,$0        60    	add	$t3, $t7, $0		#max value recebe d[i]
0x004000b4  0x08100026  j 0x00400098          61    	j	increment_max_value	
0x004000b8  0x01ad6826  xor $13,$13,$13       65   	xor	$t5, $t5, $t5		# zera i
0x004000bc  0x3c011001  lui $1,0x00001001     66   	la	$t1, c			# c para o registrador t1
0x004000c0  0x34290044  ori $9,$1,0x00000044       
0x004000c4  0x3c011001  lui $1,0x00001001     67   	la	$t2, d			# d para o registrador t2
0x004000c8  0x342a0064  ori $10,$1,0x00000064      
0x004000cc  0x018c6026  xor $12,$12,$12       68   	xor	$t4, $t4, $t4		# inicializa soma
0x004000d0  0x11a80008  beq $13,$8,0x00000008 71   	beq	$t5, $t0, inicializa_multi		# verifica se t5 e t0 s�o iguais
0x004000d4  0x8d2e0000  lw $14,0x00000000($9) 72       	lw 	$t6, 0($t1)   		# Carrega c[i]
0x004000d8  0x8d4f0000  lw $15,0x00000000($10)73       	lw 	$t7, 0($t2)   		# Carrega d[i]
0x004000dc  0x018e6020  add $12,$12,$14       75       	add	$t4, $t4, $t6		# soma soma com a[i]
0x004000e0  0x018f6020  add $12,$12,$15       76       	add	$t4, $t4, $t7		# soma soma com b[i]
0x004000e4  0x21ad0001  addi $13,$13,0x000000078       	addi	$t5, $t5, 1  		# Incrementa i
0x004000e8  0x21290004  addi $9,$9,0x00000004 79       	addi	$t1, $t1, 4  		# Avan�a para o pr�ximo elemento de c
0x004000ec  0x214a0004  addi $10,$10,0x000000080       	addi	$t2, $t2, 4  		# Avan�a para o pr�ximo elemento de d
0x004000f0  0x08100034  j 0x004000d0          81       	j soma_loop
0x004000f4  0x01ad6826  xor $13,$13,$13       85   	xor	$t5, $t5, $t5		# zera i
0x004000f8  0x0339c826  xor $25,$25,$25       86   	xor	$t9, $t9, $t9		# inicializa res multi
0x004000fc  0x3c011001  lui $1,0x00001001     88   	lw 	$t0, sm			# t0 recebe sm
0x00400100  0x8c280084  lw $8,0x00000084($1)       
0x00400104  0x01604820  add $9,$11,$0         90   	add	$t1, $t3, $0		# t1 recebe o maior valor encontrado
0x00400108  0x0120082a  slt $1,$9,$0          91   	blt	$t1, $0, max_negativo	# verifica se o meior valor encontrado � negativo
0x0040010c  0x14200004  bne $1,$0,0x00000004       
0x00400110  0x11a90005  beq $13,$9,0x00000005 94   	beq	$t5, $t1, verify_result	# verifica se i e maior valor s�o iguais
0x00400114  0x032cc820  add $25,$25,$12       95   	add	$t9, $t9, $t4			# soma e guarda em t9
0x00400118  0x21ad0001  addi $13,$13,0x000000096   	addi	$t5, $t5, 1			# incrementa t5
0x0040011c  0x08100044  j 0x00400110          97   	j multi_loop
0x00400120  0x00094822  sub $9,$0,$9          100  	sub	$t1, $0, $t1		# inverte o sinal de max value caso seja negativo
0x00400124  0x08100044  j 0x00400110          101  	j	multi_loop
0x00400128  0x000b082a  slt $1,$0,$11         104  	bgt	$t3, $0, salva_sm	# verifica se o maior valor � negativo
0x0040012c  0x14200001  bne $1,$0,0x00000001       
0x00400130  0x0019c822  sub $25,$0,$25        107  	sub	$t9, $0, $t9		# troca o sinal do resultado caso o max value seja negativo
0x00400134  0xad190000  sw $25,0x00000000($8) 111  	sw	$t9, 0($t0)		# salva o resultado em sm
0x00400138  0x0810004e  j 0x00400138          113  fim:	j	fim


0x10010000    0x00000008 0x00000002 0x00000008 0xffffffe8 0x00000004 0x0000000c 0xfffffffe 0x00000004 
0x10010020    0x00000003 0x00000007 0xfffffff4 0x00000005 0x0000000c 0x0000000f 0x00000008 0x0000000b 
0x10010040    0xfffffff9 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 
0x10010060    0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 
0x10010080    0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 
0x100100a0    0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 
0x100100c0    0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 
0x100100e0    0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 
0x10010100    0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 
0x10010120    0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 